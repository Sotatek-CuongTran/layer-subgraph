// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BlockFrequencySummarizationChanged extends ethereum.Event {
  get params(): BlockFrequencySummarizationChanged__Params {
    return new BlockFrequencySummarizationChanged__Params(this);
  }
}

export class BlockFrequencySummarizationChanged__Params {
  _event: BlockFrequencySummarizationChanged;

  constructor(event: BlockFrequencySummarizationChanged) {
    this._event = event;
  }

  get oldSummarizationFrequency(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newSummarizationFrequency(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RebalancerCreated extends ethereum.Event {
  get params(): RebalancerCreated__Params {
    return new RebalancerCreated__Params(this);
  }
}

export class RebalancerCreated__Params {
  _event: RebalancerCreated;

  constructor(event: RebalancerCreated) {
    this._event = event;
  }

  get tokenA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get pool(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get rebalancer(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class RebalancerFeeChanged extends ethereum.Event {
  get params(): RebalancerFeeChanged__Params {
    return new RebalancerFeeChanged__Params(this);
  }
}

export class RebalancerFeeChanged__Params {
  _event: RebalancerFeeChanged;

  constructor(event: RebalancerFeeChanged) {
    this._event = event;
  }

  get oldFee(): RebalancerFeeChangedOldFeeStruct {
    return this._event.parameters[0].value.toTuple() as RebalancerFeeChangedOldFeeStruct;
  }

  get numeratorNew(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get denominatorNew(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RebalancerFeeChangedOldFeeStruct extends ethereum.Tuple {
  get numerator(): BigInt {
    return this[0].toBigInt();
  }

  get denominator(): BigInt {
    return this[1].toBigInt();
  }
}

export class RebalancerV2Created extends ethereum.Event {
  get params(): RebalancerV2Created__Params {
    return new RebalancerV2Created__Params(this);
  }
}

export class RebalancerV2Created__Params {
  _event: RebalancerV2Created;

  constructor(event: RebalancerV2Created) {
    this._event = event;
  }

  get tokenA(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get fee(): i32 {
    return this._event.parameters[2].value.toI32();
  }

  get pool(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get rebalancer(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Factory__parametersResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }
}

export class Factory__rebalancerFeeResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class Factory extends ethereum.SmartContract {
  static bind(address: Address): Factory {
    return new Factory("Factory", address);
  }

  ADMIN(): Bytes {
    let result = super.call("ADMIN", "ADMIN():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ADMIN(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ADMIN", "ADMIN():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  REBALANCE_ROLE(): Bytes {
    let result = super.call("REBALANCE_ROLE", "REBALANCE_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_REBALANCE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "REBALANCE_ROLE",
      "REBALANCE_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createRebalancerV2(
    tokenA: Address,
    tokenB: Address,
    fee: i32,
    nft: Address,
    swapRouter: Address
  ): Address {
    let result = super.call(
      "createRebalancerV2",
      "createRebalancerV2(address,address,uint24,address,address):(address)",
      [
        ethereum.Value.fromAddress(tokenA),
        ethereum.Value.fromAddress(tokenB),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(fee)),
        ethereum.Value.fromAddress(nft),
        ethereum.Value.fromAddress(swapRouter)
      ]
    );

    return result[0].toAddress();
  }

  try_createRebalancerV2(
    tokenA: Address,
    tokenB: Address,
    fee: i32,
    nft: Address,
    swapRouter: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createRebalancerV2",
      "createRebalancerV2(address,address,uint24,address,address):(address)",
      [
        ethereum.Value.fromAddress(tokenA),
        ethereum.Value.fromAddress(tokenB),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(fee)),
        ethereum.Value.fromAddress(nft),
        ethereum.Value.fromAddress(swapRouter)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRebalancerV2(param0: Address): Address {
    let result = super.call(
      "getRebalancerV2",
      "getRebalancerV2(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_getRebalancerV2(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRebalancerV2",
      "getRebalancerV2(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  parameters(): Factory__parametersResult {
    let result = super.call("parameters", "parameters():(address,address)", []);

    return new Factory__parametersResult(
      result[0].toAddress(),
      result[1].toAddress()
    );
  }

  try_parameters(): ethereum.CallResult<Factory__parametersResult> {
    let result = super.tryCall(
      "parameters",
      "parameters():(address,address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Factory__parametersResult(value[0].toAddress(), value[1].toAddress())
    );
  }

  quoter(): Address {
    let result = super.call("quoter", "quoter():(address)", []);

    return result[0].toAddress();
  }

  try_quoter(): ethereum.CallResult<Address> {
    let result = super.tryCall("quoter", "quoter():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rebalancerFee(): Factory__rebalancerFeeResult {
    let result = super.call(
      "rebalancerFee",
      "rebalancerFee():(uint256,uint256)",
      []
    );

    return new Factory__rebalancerFeeResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_rebalancerFee(): ethereum.CallResult<Factory__rebalancerFeeResult> {
    let result = super.tryCall(
      "rebalancerFee",
      "rebalancerFee():(uint256,uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Factory__rebalancerFeeResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  summarizationFrequency(): BigInt {
    let result = super.call(
      "summarizationFrequency",
      "summarizationFrequency():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_summarizationFrequency(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "summarizationFrequency",
      "summarizationFrequency():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  uniswapV3Factory(): Address {
    let result = super.call(
      "uniswapV3Factory",
      "uniswapV3Factory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_uniswapV3Factory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "uniswapV3Factory",
      "uniswapV3Factory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateRebalancerV2Call extends ethereum.Call {
  get inputs(): CreateRebalancerV2Call__Inputs {
    return new CreateRebalancerV2Call__Inputs(this);
  }

  get outputs(): CreateRebalancerV2Call__Outputs {
    return new CreateRebalancerV2Call__Outputs(this);
  }
}

export class CreateRebalancerV2Call__Inputs {
  _call: CreateRebalancerV2Call;

  constructor(call: CreateRebalancerV2Call) {
    this._call = call;
  }

  get tokenA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get fee(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get nft(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get swapRouter(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class CreateRebalancerV2Call__Outputs {
  _call: CreateRebalancerV2Call;

  constructor(call: CreateRebalancerV2Call) {
    this._call = call;
  }

  get rebalancer(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetBlockFrequencySummarizationCall extends ethereum.Call {
  get inputs(): SetBlockFrequencySummarizationCall__Inputs {
    return new SetBlockFrequencySummarizationCall__Inputs(this);
  }

  get outputs(): SetBlockFrequencySummarizationCall__Outputs {
    return new SetBlockFrequencySummarizationCall__Outputs(this);
  }
}

export class SetBlockFrequencySummarizationCall__Inputs {
  _call: SetBlockFrequencySummarizationCall;

  constructor(call: SetBlockFrequencySummarizationCall) {
    this._call = call;
  }

  get _summarizationFrequency(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBlockFrequencySummarizationCall__Outputs {
  _call: SetBlockFrequencySummarizationCall;

  constructor(call: SetBlockFrequencySummarizationCall) {
    this._call = call;
  }
}

export class SetRebalanceFeeCall extends ethereum.Call {
  get inputs(): SetRebalanceFeeCall__Inputs {
    return new SetRebalanceFeeCall__Inputs(this);
  }

  get outputs(): SetRebalanceFeeCall__Outputs {
    return new SetRebalanceFeeCall__Outputs(this);
  }
}

export class SetRebalanceFeeCall__Inputs {
  _call: SetRebalanceFeeCall;

  constructor(call: SetRebalanceFeeCall) {
    this._call = call;
  }

  get numerator(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get denominator(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetRebalanceFeeCall__Outputs {
  _call: SetRebalanceFeeCall;

  constructor(call: SetRebalanceFeeCall) {
    this._call = call;
  }
}

export class SetUniswapV3FactoryCall extends ethereum.Call {
  get inputs(): SetUniswapV3FactoryCall__Inputs {
    return new SetUniswapV3FactoryCall__Inputs(this);
  }

  get outputs(): SetUniswapV3FactoryCall__Outputs {
    return new SetUniswapV3FactoryCall__Outputs(this);
  }
}

export class SetUniswapV3FactoryCall__Inputs {
  _call: SetUniswapV3FactoryCall;

  constructor(call: SetUniswapV3FactoryCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetUniswapV3FactoryCall__Outputs {
  _call: SetUniswapV3FactoryCall;

  constructor(call: SetUniswapV3FactoryCall) {
    this._call = call;
  }
}

export class SetUniswapV3QuoterCall extends ethereum.Call {
  get inputs(): SetUniswapV3QuoterCall__Inputs {
    return new SetUniswapV3QuoterCall__Inputs(this);
  }

  get outputs(): SetUniswapV3QuoterCall__Outputs {
    return new SetUniswapV3QuoterCall__Outputs(this);
  }
}

export class SetUniswapV3QuoterCall__Inputs {
  _call: SetUniswapV3QuoterCall;

  constructor(call: SetUniswapV3QuoterCall) {
    this._call = call;
  }

  get _addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetUniswapV3QuoterCall__Outputs {
  _call: SetUniswapV3QuoterCall;

  constructor(call: SetUniswapV3QuoterCall) {
    this._call = call;
  }
}
